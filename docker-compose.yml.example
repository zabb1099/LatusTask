version: '3.1'

#Docker Networks
networks:
    laravel:
        driver: bridge
#volumes
volumes:
    mysql-data:
        driver: local
    mssql-data:
        driver: local

# Workflow
services:
    nginx:
        build:
            context: .
            dockerfile: ./docker/nginx/Dockerfile
        container_name: "${DOCKER_PROJECT_PREFIX}-nginx"
        ports:
            - "${DOCKER_NGINX_PORT}:80"
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - php
            - mysql
        networks:
            - laravel

    mysql:
        image: mysql:8.0.32
        container_name: "${DOCKER_PROJECT_PREFIX}-mysql"
        restart: always
        environment:
            MYSQL_ROOT_PASSWORD: rYJtQ5otFh35qS092
            MYSQL_DATABASE: "${DOCKER_PROJECT_PREFIX}"
        ports:
            - "${DOCKER_MYSQL_PORT}:3306"
        volumes:
            - mysql-data:/var/lib/mysql
        networks:
            - laravel

    mssql:
        image: mcr.microsoft.com/mssql/server:2022-latest
        container_name: "${DOCKER_PROJECT_PREFIX}-mssql"
        restart: always
        environment:
            ACCEPT_EULA: Y
            SA_PASSWORD: rYJtQ5otFh35qS092
        ports:
            - "${DOCKER_MSSQL_PORT}:1433"
        volumes:
            - mssql-data:/var/opt/mssql
        networks:
            - laravel

    php:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: "${DOCKER_PROJECT_PREFIX}-php"
        volumes:
            - ./:/var/www/html:delegated
        ports:
            - "${DOCKER_PHP_PORT}:9000"
        networks:
            - laravel

    composer:
        build:
            context: .
            dockerfile: ./docker/php/composer/Dockerfile
        container_name: "${DOCKER_PROJECT_PREFIX}-composer"
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        depends_on:
            - php
        user: laravel
        networks:
            - laravel
        entrypoint: ['composer', '--ignore-platform-reqs']

    npm:
        image: node:20-alpine
        container_name: "${DOCKER_PROJECT_PREFIX}-npm"
        volumes:
            - ./:/var/www/html
        working_dir: /var/www/html
        entrypoint: ['npm']

    artisan:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        container_name: "${DOCKER_PROJECT_PREFIX}-artisan"
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - mysql
        working_dir: /var/www/html
        user: laravel
        entrypoint: ['php', '/var/www/html/artisan']
        networks:
            - laravel
    redis:
        image: "redis:alpine"
        container_name: "${DOCKER_PROJECT_PREFIX}-redis"
        restart: unless-stopped
        ports:
            - "${DOCKER_REDIS_PORT}:6379"
        networks:
            - laravel

    queue_worker:
        build:
            context: .
            dockerfile: ./docker/php/Dockerfile
        restart: unless-stopped
        volumes:
            - ./:/var/www/html:delegated
        depends_on:
            - mysql
        working_dir: /var/www/html
        user: laravel
        entrypoint: [ 'php', '/var/www/html/artisan', 'queue:work', '--max-jobs=1000' ]
        networks:
            - laravel
