<?php

namespace Tests\Feature\Audit;

use App\Models\User;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Tests\TestCase;

class AuditReadTraitTest extends TestCase
{

    use RefreshDatabase;

    /**
     * @return void
     */

    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        User::factory('50')->create();
    }

    /**
     * @return void
     */

    public function test_paginate_function_audit(){
        User::paginate(30);
        $this->assertDatabaseHas('audit_read_jobs' , [
            'user_id' => 0,
            'model' => User::class,
            'function' => 'paginate'
        ]);
    }

    /**
     * @return void
     */

    public function test_find_function_audit_with_id_1(){
        User::find(1);
        $this->assertDatabaseHas('audit_read_jobs' , [
            'user_id' => 0,
            'model' => User::class,
            'function' => 'find',
            'model_id' => 1
        ]);
    }

    /**
     * Find test to make sure it's not just checking based on defaults
     *
     * @return void
     */

    public function test_find_function_audit_with_id_3(){
        User::find(3);
        $this->assertDatabaseHas('audit_read_jobs' , [
            'user_id' => 0,
            'model' => User::class,
            'function' => 'find',
            'model_id' => 3
        ]);
    }

    /**
     * Find test with an id between 1 and 5 which is 36
     *
     * @return void
     */

    public function test_find_function_audit_with_id_36(){
        User::find(36);
        $this->assertDatabaseHas('audit_read_jobs' , [
            'user_id' => 0,
            'model' => User::class,
            'function' => 'find',
            'model_id' => 36
        ]);
    }

    /**
     * @return void
     */

    public function test_all_function_audit(){
        User::all();
        $this->assertDatabaseHas('audit_read_jobs' , [
            'user_id' => 0,
            'model' => User::class,
            'function' => 'all'
        ]);
    }

}
